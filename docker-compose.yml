version: "3.9"

services:
  local-storage:
    image: postgres:16-alpine3.19
    restart: always
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '5436:5432'

  redis:
    image: redis:7-alpine
    restart: always
    ports:
      - "6379:6379"

  redpanda:
    image: redpandadata/redpanda:v24.1.3
    container_name: redpanda
    command:
      - redpanda
      - start
      - --overprovisioned
      - --smp=1
      - --memory=512M
      - --reserve-memory=0M
      - --node-id=0
      - --check=false
      - --kafka-addr=PLAINTEXT://0.0.0.0:9092
      - --advertise-kafka-addr=PLAINTEXT://redpanda:9092
    ports:
      - "9092:9092"
      - "9644:9644"

  schema-registry:
    image: confluentinc/cp-schema-registry:7.5.0
    depends_on:
      - redpanda
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://redpanda:9092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8085
    ports:
      - "8085:8085"


  weather-app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - local-storage
      - redpanda
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://local-storage:5432/${POSTGRES_DB}
      SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
      SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
      SPRING_KAFKA_BOOTSTRAP_SERVERS: redpanda:9092
    ports:
      - '8081:8080'

  kafka-ui:
    image: provectuslabs/kafka-ui:v0.7.2
    environment:
      SERVER_PORT: 8084
      KAFKA_CLUSTERS_0_NAME: redpanda
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: redpanda:9092
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: http://schema-registry:8085
    depends_on:
      - redpanda
      - schema-registry
    ports:
      - "8084:8084"
